import React, { useState } from "react";

export default function App() {
  const [id, setId] = useState("");
  const [product, setProduct] = useState(null);
  const [name, setName] = useState("");
  const [category, setCategory] = useState("");
  const [price, setPrice] = useState("");
  const [message, setMessage] = useState("");

  // ðŸ”¹ Fetch product by ID
  async function getProduct(e) {
    e.preventDefault();
    try {
      const res = await fetch(http://localhost:3003/products/${id});
      const data = await res.json();
      if (res.ok) setProduct(data);
      else setMessage(data.error);
    } catch {
      setMessage("Error fetching product");
    }
  }

  // ðŸ”¹ Add new product
  async function addProduct(e) {
    e.preventDefault();
    try {
      const res = await fetch("http://localhost:3003/products", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, category, price: Number(price) })
      });
      const data = await res.json();
      if (res.ok) setMessage(âœ… Product added: ${data.name});
      else setMessage(data.error);
    } catch {
      setMessage("Error adding product");
    }
  }

  return (
    <div style={{ padding: "20px" }}>
      <h2>Product Manager</h2>

      <form onSubmit={getProduct}>
        <input
          type="number"
          placeholder="Enter product ID"
          value={id}
          onChange={(e) => setId(e.target.value)}
        />
        <button type="submit">Get Product</button>
      </form>

      {product && (
        <p>
          <b>{product.name}</b> - {product.category} - â‚¹{product.price}
        </p>
      )}

      <hr />

      <form onSubmit={addProduct}>
        <input
          placeholder="Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        <input
          placeholder="Category"
          value={category}
          onChange={(e) => setCategory(e.target.value)}
        />
        <input
          type="number"
          placeholder="Price"
          value={price}
          onChange={(e) => setPrice(e.target.value)}
        />
        <button type="submit">Add Product</button>
      </form>

      <h3>{message}</h3>
    </div>
  );
}
const express = require("express");
const cors = require("cors");

const app = express();
app.use(express.json());

// âœ… Enable CORS
app.use(cors({
  origin: "http://localhost:3001", // or 3001 if your React app runs there
  methods: ["GET", "POST"]
}));

const PORT = 3003;

let products = [
  { id: 1, name: "Pen", category: "Stationery", price: 10 },
  { id: 2, name: "Notebook", category: "Stationery", price: 50 }
];

app.get("/products/:id", (req, res) => {
  const id = Number(req.params.id);
  const p = products.find(x => x.id === id);
  if (!p) return res.status(404).json({ error: "Not found" });
  res.json(p);
});

app.post("/products", (req, res) => {
  const { name, category, price } = req.body;
  if (!name || !category || typeof price !== "number") {
    return res.status(400).json({ error: "Invalid product body" });
  }
  const id = products.length ? Math.max(...products.map(p => p.id)) + 1 : 1;
  const newP = { id, name, category, price };
  products.push(newP);
  res.status(201).json(newP);
});

app.listen(PORT, () => console.log(âœ… Products server running on http://localhost:${PORT}));
